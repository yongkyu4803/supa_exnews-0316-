name: Cron Job

on:
  schedule:
    - cron: '*/5 * * * *'  # 5분마다 실행
  workflow_dispatch:  # 수동 실행 가능

jobs:
  cron:
    runs-on: ubuntu-latest
    env:
      VERCEL_URL: ${{ secrets.VERCEL_URL }}
      CRON_SECRET: ${{ secrets.CRON_SECRET }}
    steps:
      - name: Call News Collection API
        run: |
          # 환경 변수 확인
          if [ -z "$VERCEL_URL" ]; then
            echo "Error: VERCEL_URL is not set"
            exit 1
          fi
          
          if [ -z "$CRON_SECRET" ]; then
            echo "Error: CRON_SECRET is not set"
            exit 1
          fi
          
          # API URL 구성
          API_URL="$VERCEL_URL/api/cron/collect-news"
          echo "Calling API at: $API_URL"
          
          # Authorization 헤더 구성
          AUTH_HEADER="Bearer $CRON_SECRET"
          
          # curl 요청 실행
          echo "Making API request..."
          
          # 임시 파일 생성
          RESPONSE_FILE=$(mktemp)
          HTTP_CODE=$(curl -v -X POST "$API_URL" \
            -H "Authorization: $AUTH_HEADER" \
            -H "Content-Type: application/json" \
            --write-out "%{http_code}" \
            --silent \
            --output "$RESPONSE_FILE" \
            2>&1)
          
          # curl 종료 코드 저장
          CURL_EXIT_CODE=$?
          
          # curl 자체 오류 확인
          if [ $CURL_EXIT_CODE -ne 0 ]; then
            echo "Error: curl command failed with exit code $CURL_EXIT_CODE"
            exit 1
          fi
          
          echo "HTTP Status Code: $HTTP_CODE"
          echo "Response body:"
          cat "$RESPONSE_FILE"
          
          # 임시 파일 삭제
          rm -f "$RESPONSE_FILE"
          
          # HTTP 상태 코드 확인
          if [ "$HTTP_CODE" != "200" ]; then
            echo "Error: API request failed with HTTP status code $HTTP_CODE"
            exit 1
          fi
          
          echo "API call completed successfully!" 